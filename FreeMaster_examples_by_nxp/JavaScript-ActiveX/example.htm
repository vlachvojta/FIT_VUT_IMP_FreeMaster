<!--
Copyright 2019-2020 NXP

SPDX-License-Identifier: BSD-3-Clause


example.htm: FreeMASTER ActiveX example
-->


<html>
<head>    
    <script type="text/javascript">    
    
    function on_error(err) 
    {
        /* Erors are reported in the status field. */
        document.getElementById("status").innerHTML = err;
    }
    
    function read_variable(name, span_id)
    {
        /* ReadVariable uses FreeMASTER variable object from current project. Use 
         * ReadUIntVariable to access the memory directly using a symbol name. */
        if(pcm.ReadVariable(name))
            document.getElementById(span_id).innerHTML = pcm.LastVariable_vValue;
        else
            on_error("Error when reading variable " + name + ". " + pcm.LastRetMsg);
    }
    
    function read_array(name, elemSize, length, span_id)
    {
        /* Arrays are accessed in memory directly, using a symbol name and element size.  */
        if(pcm.ReadUIntArray(name, length, elemSize))
        {
            var rarr = pcm.LastResult ? pcm.LastMemory_data.toArray() : new Array();
            document.getElementById(span_id).innerHTML = "";
            for(i=0; i<rarr.length; i++)
                document.getElementById(span_id).innerHTML += rarr[i] + ", ";
        }
        else
        {
            on_error("Error when reading array " + name + ". " + pcm.LastRetMsg);
        }
    }
    
    function write_variable(name, input_id)
    {
        var val = document.getElementById(input_id).value;
        
        /* WriteVariable uses FreeMASTER variable object from current project. Use 
         * WriteUIntVariable to access the memory directly using a symbol name. */
        if(pcm.WriteVariable(name, val))
            document.getElementById("status").innerHTML = "Write of the " + name + " succeeded.";
        else
            on_error("Error when writting variable " + name + ". " + pcm.LastRetMsg);
    }
    
    </script>    
</head>
<body>
    <!-- The main FreeMASTER ActiveX communication object -->
    <object id="pcm" height="0" width="0" classid="clsid:48A185F1-FFDB-11D3-80E3-00C04F176153"></object>
    
    <!-- User form -->
    Read var16 = <span id="var16_read">N/A</span> <input type="button" value="Read var16" onclick="read_variable('var16', 'var16_read')" /> <br />
    Read var16inc = <span id="var16inc_read">N/A</span> <input type="button" value="Read var16inc" onclick="read_variable('var16inc', 'var16inc_read')" /> <br />
    Read arr16 = <span id="arr16_read">N/A</span> <input type="button" value="Read arr16" onclick="read_array('arr16', 2, 10, 'arr16_read')" /> <br />
    
    Write var16inc: <input type="text" id="var16inc_val" value="10" /> <input type="button" value="Write var16inc" onclick="write_variable('var16inc', 'var16inc_val')" /> <br />
    
    Status: <span id="status">No errors.</span> <br />
</body>
</html>